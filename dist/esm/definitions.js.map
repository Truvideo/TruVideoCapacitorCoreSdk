{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface AuthenticationPlugin {\n  /**\n   * Echo test method.\n   */\n  echo(options: { value: string }): Promise<{ value: string }>;\n\n  /**\n   * Checks if the user is authenticated.\n   */\n  isAuthenticated(): Promise<{ isAuthenticated: boolean }>;\n\n  /**\n   * Checks if the authentication has expired.\n   */\n  isAuthenticationExpired(): Promise<{ isAuthenticationExpired: boolean }>;\n\n  /**\n   * Generates the payload used for authentication.\n   */\n  generatePayload(): Promise<{ generatePayload: string }>;\n\n  /**\n   * Performs authentication using the provided parameters.\n   */\n  authenticate(options: {\n    apiKey: string;\n    payload: string;\n    signature: string;\n    externalId: string;\n  }): Promise<{ authenticate: string }>;\n\n  /**\n   * Initializes the authentication system.\n   */\n  initAuthentication(): Promise<{ initAuthentication: string }>;\n\n  /**\n   * Clears the authentication session.\n   */\n  clearAuthentication(): Promise<{ clearAuthentication: string }>;\n\n  /**\n   * Converts a payload to a SHA256 HMAC signature using a secret key.\n   */\n  toSha256String(options: {\n    secretKey: string;\n    payload: string;\n  }): Promise<{ signature: string }>;\n}\n"]}