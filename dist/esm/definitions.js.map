{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface AuthenticationPlugin {\r\n  /**\r\n   * Echo test method.\r\n   */\r\n  echo(options: { value: string }): Promise<{ value: string }>;\r\n\r\n  /**\r\n   * Checks if the user is authenticated.\r\n   */\r\n  isAuthenticated(): Promise<{ isAuthenticated: boolean }>;\r\n\r\n  /**\r\n   * Checks if the authentication has expired.\r\n   */\r\n  isAuthenticationExpired(): Promise<{ isAuthenticationExpired: boolean }>;\r\n\r\n  /**\r\n   * Generates the payload used for authentication.\r\n   */\r\n  generatePayload(): Promise<{ generatePayload: string }>;\r\n\r\n  /**\r\n   * Performs authentication using the provided parameters.\r\n   */\r\n  authenticate(options: {\r\n    apiKey: string;\r\n    payload: string;\r\n    signature: string;\r\n    externalId: string;\r\n  }): Promise<{ authenticate: string }>;\r\n\r\n  /**\r\n   * Initializes the authentication system.\r\n   */\r\n  initAuthentication(): Promise<{ initAuthentication: string }>;\r\n\r\n  /**\r\n   * Clears the authentication session.\r\n   */\r\n  clearAuthentication(): Promise<{ clearAuthentication: string }>;\r\n\r\n  /**\r\n   * Converts a payload to a SHA256 HMAC signature using a secret key.\r\n   */\r\n  toSha256String(options: {\r\n    secretKey: string;\r\n    payload: string;\r\n  }): Promise<{ signature: string }>;\r\n}\r\n"]}